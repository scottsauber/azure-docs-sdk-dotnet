<Type Name="StartRecognizingResult" FullName="Azure.Communication.CallAutomation.StartRecognizingResult">
  <TypeSignature Language="C#" Value="public class StartRecognizingResult : Azure.Communication.CallAutomation.ResultWithWaitForEventBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StartRecognizingResult extends Azure.Communication.CallAutomation.ResultWithWaitForEventBase" />
  <TypeSignature Language="DocId" Value="T:Azure.Communication.CallAutomation.StartRecognizingResult" />
  <TypeSignature Language="VB.NET" Value="Public Class StartRecognizingResult&#xA;Inherits ResultWithWaitForEventBase" />
  <TypeSignature Language="F#" Value="type StartRecognizingResult = class&#xA;    inherit ResultWithWaitForEventBase" />
  <AssemblyInfo>
    <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.Communication.CallAutomation.ResultWithWaitForEventBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>The result from start recognizing result.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="WaitForEvent">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Azure.Communication.CallAutomation.StartRecognizingEventResult&gt; WaitForEvent (TimeSpan eventTimeout = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Azure.Communication.CallAutomation.StartRecognizingEventResult&gt; WaitForEvent(valuetype System.TimeSpan eventTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.CallAutomation.StartRecognizingResult.WaitForEvent(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForEvent (Optional eventTimeout As TimeSpan = Nothing) As Task(Of StartRecognizingEventResult)" />
      <MemberSignature Language="F#" Value="member this.WaitForEvent : TimeSpan -&gt; System.Threading.Tasks.Task&lt;Azure.Communication.CallAutomation.StartRecognizingEventResult&gt;" Usage="startRecognizingResult.WaitForEvent eventTimeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.CallAutomation</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Communication.CallAutomation.StartRecognizingEventResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventTimeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="eventTimeout">To be added.</param>
        <summary>
            Wait for <see cref="T:Azure.Communication.CallAutomation.StartRecognizingEventResult" /> using <see cref="T:Azure.Communication.CallAutomation.EventProcessor" />.
            </summary>
        <returns>Returns <see cref="T:Azure.Communication.CallAutomation.StartRecognizingEventResult" /> which contains either <see cref="T:Azure.Communication.CallAutomation.RecognizeCompleted" /> event or <see cref="T:Azure.Communication.CallAutomation.RecognizeFailed" /> event.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
