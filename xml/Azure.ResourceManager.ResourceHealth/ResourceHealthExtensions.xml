<Type Name="ResourceHealthExtensions" FullName="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions">
  <TypeSignature Language="C#" Value="public static class ResourceHealthExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ResourceHealthExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ResourceHealthExtensions" />
  <TypeSignature Language="F#" Value="type ResourceHealthExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.ResourceHealth. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetAvailabilityStatus">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.AvailabilityStatusResource GetAvailabilityStatus (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.AvailabilityStatusResource GetAvailabilityStatus(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetAvailabilityStatus(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAvailabilityStatus (client As ArmClient, scope As ResourceIdentifier) As AvailabilityStatusResource" />
      <MemberSignature Language="F#" Value="static member GetAvailabilityStatus : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ResourceHealth.AvailabilityStatusResource" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetAvailabilityStatus (client, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.AvailabilityStatusResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="scope" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="scope"> The scope that the resource will apply against. </param>
        <summary> Gets an object representing a AvailabilityStatusResource along with the instance operations that can be performed on it in the ArmResource. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ResourceHealth.AvailabilityStatusResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailabilityStatusResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.AvailabilityStatusResource GetAvailabilityStatusResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.AvailabilityStatusResource GetAvailabilityStatusResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetAvailabilityStatusResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAvailabilityStatusResource (client As ArmClient, id As ResourceIdentifier) As AvailabilityStatusResource" />
      <MemberSignature Language="F#" Value="static member GetAvailabilityStatusResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ResourceHealth.AvailabilityStatusResource" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetAvailabilityStatusResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.AvailabilityStatusResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ResourceHealth.AvailabilityStatusResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ResourceHealth.AvailabilityStatusResource.CreateResourceIdentifier(System.String)" /> to create an <see cref="T:Azure.ResourceManager.ResourceHealth.AvailabilityStatusResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ResourceHealth.AvailabilityStatusResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEmergingIssuesGetResult">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ResourceHealth.EmergingIssuesGetResultResource&gt; GetEmergingIssuesGetResult (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.ResourceManager.ResourceHealth.Models.IssueNameParameter issueName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ResourceHealth.EmergingIssuesGetResultResource&gt; GetEmergingIssuesGetResult(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.ResourceManager.ResourceHealth.Models.IssueNameParameter issueName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetEmergingIssuesGetResult(Azure.ResourceManager.Resources.TenantResource,Azure.ResourceManager.ResourceHealth.Models.IssueNameParameter,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEmergingIssuesGetResult (tenantResource As TenantResource, issueName As IssueNameParameter, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EmergingIssuesGetResultResource)" />
      <MemberSignature Language="F#" Value="static member GetEmergingIssuesGetResult : Azure.ResourceManager.Resources.TenantResource * Azure.ResourceManager.ResourceHealth.Models.IssueNameParameter * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ResourceHealth.EmergingIssuesGetResultResource&gt;" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetEmergingIssuesGetResult (tenantResource, issueName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ResourceHealth.EmergingIssuesGetResultResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="issueName" Type="Azure.ResourceManager.ResourceHealth.Models.IssueNameParameter" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="issueName"> The name of the emerging issue. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets Azure services' emerging issues.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.ResourceHealth/emergingIssues/{issueName}</description></item><item><term>Operation Id</term><description>EmergingIssues_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEmergingIssuesGetResultAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.EmergingIssuesGetResultResource&gt;&gt; GetEmergingIssuesGetResultAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, Azure.ResourceManager.ResourceHealth.Models.IssueNameParameter issueName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ResourceHealth.EmergingIssuesGetResultResource&gt;&gt; GetEmergingIssuesGetResultAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, valuetype Azure.ResourceManager.ResourceHealth.Models.IssueNameParameter issueName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetEmergingIssuesGetResultAsync(Azure.ResourceManager.Resources.TenantResource,Azure.ResourceManager.ResourceHealth.Models.IssueNameParameter,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEmergingIssuesGetResultAsync (tenantResource As TenantResource, issueName As IssueNameParameter, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EmergingIssuesGetResultResource))" />
      <MemberSignature Language="F#" Value="static member GetEmergingIssuesGetResultAsync : Azure.ResourceManager.Resources.TenantResource * Azure.ResourceManager.ResourceHealth.Models.IssueNameParameter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.EmergingIssuesGetResultResource&gt;&gt;" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetEmergingIssuesGetResultAsync (tenantResource, issueName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.EmergingIssuesGetResultResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="issueName" Type="Azure.ResourceManager.ResourceHealth.Models.IssueNameParameter" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="issueName"> The name of the emerging issue. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets Azure services' emerging issues.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.ResourceHealth/emergingIssues/{issueName}</description></item><item><term>Operation Id</term><description>EmergingIssues_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEmergingIssuesGetResultResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.EmergingIssuesGetResultResource GetEmergingIssuesGetResultResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.EmergingIssuesGetResultResource GetEmergingIssuesGetResultResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetEmergingIssuesGetResultResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEmergingIssuesGetResultResource (client As ArmClient, id As ResourceIdentifier) As EmergingIssuesGetResultResource" />
      <MemberSignature Language="F#" Value="static member GetEmergingIssuesGetResultResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ResourceHealth.EmergingIssuesGetResultResource" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetEmergingIssuesGetResultResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.EmergingIssuesGetResultResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ResourceHealth.EmergingIssuesGetResultResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ResourceHealth.EmergingIssuesGetResultResource.CreateResourceIdentifier(Azure.ResourceManager.ResourceHealth.Models.IssueNameParameter)" /> to create an <see cref="T:Azure.ResourceManager.ResourceHealth.EmergingIssuesGetResultResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ResourceHealth.EmergingIssuesGetResultResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEmergingIssuesGetResults">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.EmergingIssuesGetResultCollection GetEmergingIssuesGetResults (this Azure.ResourceManager.Resources.TenantResource tenantResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.EmergingIssuesGetResultCollection GetEmergingIssuesGetResults(class Azure.ResourceManager.Resources.TenantResource tenantResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetEmergingIssuesGetResults(Azure.ResourceManager.Resources.TenantResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEmergingIssuesGetResults (tenantResource As TenantResource) As EmergingIssuesGetResultCollection" />
      <MemberSignature Language="F#" Value="static member GetEmergingIssuesGetResults : Azure.ResourceManager.Resources.TenantResource -&gt; Azure.ResourceManager.ResourceHealth.EmergingIssuesGetResultCollection" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetEmergingIssuesGetResults tenantResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.EmergingIssuesGetResultCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of EmergingIssuesGetResultResources in the TenantResource. </summary>
        <returns> An object representing collection of EmergingIssuesGetResultResources and their operations over a EmergingIssuesGetResultResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataEntities">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.MetadataEntityCollection GetMetadataEntities (this Azure.ResourceManager.Resources.TenantResource tenantResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.MetadataEntityCollection GetMetadataEntities(class Azure.ResourceManager.Resources.TenantResource tenantResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetMetadataEntities(Azure.ResourceManager.Resources.TenantResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMetadataEntities (tenantResource As TenantResource) As MetadataEntityCollection" />
      <MemberSignature Language="F#" Value="static member GetMetadataEntities : Azure.ResourceManager.Resources.TenantResource -&gt; Azure.ResourceManager.ResourceHealth.MetadataEntityCollection" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetMetadataEntities tenantResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.MetadataEntityCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of MetadataEntityResources in the TenantResource. </summary>
        <returns> An object representing collection of MetadataEntityResources and their operations over a MetadataEntityResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataEntity">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ResourceHealth.MetadataEntityResource&gt; GetMetadataEntity (this Azure.ResourceManager.Resources.TenantResource tenantResource, string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ResourceHealth.MetadataEntityResource&gt; GetMetadataEntity(class Azure.ResourceManager.Resources.TenantResource tenantResource, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetMetadataEntity(Azure.ResourceManager.Resources.TenantResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMetadataEntity (tenantResource As TenantResource, name As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of MetadataEntityResource)" />
      <MemberSignature Language="F#" Value="static member GetMetadataEntity : Azure.ResourceManager.Resources.TenantResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ResourceHealth.MetadataEntityResource&gt;" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetMetadataEntity (tenantResource, name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ResourceHealth.MetadataEntityResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="name"> Name of metadata entity. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the list of metadata entities.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.ResourceHealth/metadata/{name}</description></item><item><term>Operation Id</term><description>Metadata_GetEntity</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataEntityAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.MetadataEntityResource&gt;&gt; GetMetadataEntityAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ResourceHealth.MetadataEntityResource&gt;&gt; GetMetadataEntityAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetMetadataEntityAsync(Azure.ResourceManager.Resources.TenantResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMetadataEntityAsync (tenantResource As TenantResource, name As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MetadataEntityResource))" />
      <MemberSignature Language="F#" Value="static member GetMetadataEntityAsync : Azure.ResourceManager.Resources.TenantResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.MetadataEntityResource&gt;&gt;" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetMetadataEntityAsync (tenantResource, name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.MetadataEntityResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="name"> Name of metadata entity. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the list of metadata entities.
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.ResourceHealth/metadata/{name}</description></item><item><term>Operation Id</term><description>Metadata_GetEntity</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataEntityResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.MetadataEntityResource GetMetadataEntityResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.MetadataEntityResource GetMetadataEntityResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetMetadataEntityResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMetadataEntityResource (client As ArmClient, id As ResourceIdentifier) As MetadataEntityResource" />
      <MemberSignature Language="F#" Value="static member GetMetadataEntityResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ResourceHealth.MetadataEntityResource" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetMetadataEntityResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.MetadataEntityResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ResourceHealth.MetadataEntityResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ResourceHealth.MetadataEntityResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.ResourceHealth.MetadataEntityResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ResourceHealth.MetadataEntityResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionEvent">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ResourceHealth.SubscriptionEventResource&gt; GetSubscriptionEvent (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string eventTrackingId, string filter = default, string queryStartTime = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ResourceHealth.SubscriptionEventResource&gt; GetSubscriptionEvent(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string eventTrackingId, string filter, string queryStartTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetSubscriptionEvent(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSubscriptionEvent (subscriptionResource As SubscriptionResource, eventTrackingId As String, Optional filter As String = Nothing, Optional queryStartTime As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SubscriptionEventResource)" />
      <MemberSignature Language="F#" Value="static member GetSubscriptionEvent : Azure.ResourceManager.Resources.SubscriptionResource * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ResourceHealth.SubscriptionEventResource&gt;" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetSubscriptionEvent (subscriptionResource, eventTrackingId, filter, queryStartTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ResourceHealth.SubscriptionEventResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="eventTrackingId" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="queryStartTime" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="eventTrackingId"> Event Id which uniquely identifies ServiceHealth event. </param>
        <param name="filter"> The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN. </param>
        <param name="queryStartTime"> Specifies from when to return events, based on the lastUpdateTime property. For example, queryStartTime = 7/24/2020 OR queryStartTime=7%2F24%2F2020. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Service health event in the subscription by event tracking id
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ResourceHealth/events/{eventTrackingId}</description></item><item><term>Operation Id</term><description>Event_GetBySubscriptionIdAndTrackingId</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="eventTrackingId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="eventTrackingId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionEventAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.SubscriptionEventResource&gt;&gt; GetSubscriptionEventAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string eventTrackingId, string filter = default, string queryStartTime = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ResourceHealth.SubscriptionEventResource&gt;&gt; GetSubscriptionEventAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, string eventTrackingId, string filter, string queryStartTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetSubscriptionEventAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSubscriptionEventAsync (subscriptionResource As SubscriptionResource, eventTrackingId As String, Optional filter As String = Nothing, Optional queryStartTime As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SubscriptionEventResource))" />
      <MemberSignature Language="F#" Value="static member GetSubscriptionEventAsync : Azure.ResourceManager.Resources.SubscriptionResource * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.SubscriptionEventResource&gt;&gt;" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetSubscriptionEventAsync (subscriptionResource, eventTrackingId, filter, queryStartTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.SubscriptionEventResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="eventTrackingId" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="queryStartTime" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="eventTrackingId"> Event Id which uniquely identifies ServiceHealth event. </param>
        <param name="filter"> The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN. </param>
        <param name="queryStartTime"> Specifies from when to return events, based on the lastUpdateTime property. For example, queryStartTime = 7/24/2020 OR queryStartTime=7%2F24%2F2020. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Service health event in the subscription by event tracking id
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ResourceHealth/events/{eventTrackingId}</description></item><item><term>Operation Id</term><description>Event_GetBySubscriptionIdAndTrackingId</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="eventTrackingId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="eventTrackingId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionEventResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.SubscriptionEventResource GetSubscriptionEventResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.SubscriptionEventResource GetSubscriptionEventResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetSubscriptionEventResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSubscriptionEventResource (client As ArmClient, id As ResourceIdentifier) As SubscriptionEventResource" />
      <MemberSignature Language="F#" Value="static member GetSubscriptionEventResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ResourceHealth.SubscriptionEventResource" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetSubscriptionEventResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.SubscriptionEventResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ResourceHealth.SubscriptionEventResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ResourceHealth.SubscriptionEventResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ResourceHealth.SubscriptionEventResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ResourceHealth.SubscriptionEventResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionEvents">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.SubscriptionEventCollection GetSubscriptionEvents (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.SubscriptionEventCollection GetSubscriptionEvents(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetSubscriptionEvents(Azure.ResourceManager.Resources.SubscriptionResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSubscriptionEvents (subscriptionResource As SubscriptionResource) As SubscriptionEventCollection" />
      <MemberSignature Language="F#" Value="static member GetSubscriptionEvents : Azure.ResourceManager.Resources.SubscriptionResource -&gt; Azure.ResourceManager.ResourceHealth.SubscriptionEventCollection" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetSubscriptionEvents subscriptionResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.SubscriptionEventCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of SubscriptionEventResources in the SubscriptionResource. </summary>
        <returns> An object representing collection of SubscriptionEventResources and their operations over a SubscriptionEventResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionResourceHealthEventImpactedResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.SubscriptionResourceHealthEventImpactedResource GetSubscriptionResourceHealthEventImpactedResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.SubscriptionResourceHealthEventImpactedResource GetSubscriptionResourceHealthEventImpactedResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetSubscriptionResourceHealthEventImpactedResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSubscriptionResourceHealthEventImpactedResource (client As ArmClient, id As ResourceIdentifier) As SubscriptionResourceHealthEventImpactedResource" />
      <MemberSignature Language="F#" Value="static member GetSubscriptionResourceHealthEventImpactedResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ResourceHealth.SubscriptionResourceHealthEventImpactedResource" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetSubscriptionResourceHealthEventImpactedResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.SubscriptionResourceHealthEventImpactedResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ResourceHealth.SubscriptionResourceHealthEventImpactedResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ResourceHealth.SubscriptionResourceHealthEventImpactedResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ResourceHealth.SubscriptionResourceHealthEventImpactedResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ResourceHealth.SubscriptionResourceHealthEventImpactedResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTenantEvent">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ResourceHealth.TenantEventResource&gt; GetTenantEvent (this Azure.ResourceManager.Resources.TenantResource tenantResource, string eventTrackingId, string filter = default, string queryStartTime = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ResourceHealth.TenantEventResource&gt; GetTenantEvent(class Azure.ResourceManager.Resources.TenantResource tenantResource, string eventTrackingId, string filter, string queryStartTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetTenantEvent(Azure.ResourceManager.Resources.TenantResource,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTenantEvent (tenantResource As TenantResource, eventTrackingId As String, Optional filter As String = Nothing, Optional queryStartTime As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of TenantEventResource)" />
      <MemberSignature Language="F#" Value="static member GetTenantEvent : Azure.ResourceManager.Resources.TenantResource * string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ResourceHealth.TenantEventResource&gt;" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetTenantEvent (tenantResource, eventTrackingId, filter, queryStartTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ResourceHealth.TenantEventResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="eventTrackingId" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="queryStartTime" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="eventTrackingId"> Event Id which uniquely identifies ServiceHealth event. </param>
        <param name="filter"> The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN. </param>
        <param name="queryStartTime"> Specifies from when to return events, based on the lastUpdateTime property. For example, queryStartTime = 7/24/2020 OR queryStartTime=7%2F24%2F2020. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Service health event in the tenant by event tracking id
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.ResourceHealth/events/{eventTrackingId}</description></item><item><term>Operation Id</term><description>Event_GetByTenantIdAndTrackingId</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="eventTrackingId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="eventTrackingId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTenantEventAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.TenantEventResource&gt;&gt; GetTenantEventAsync (this Azure.ResourceManager.Resources.TenantResource tenantResource, string eventTrackingId, string filter = default, string queryStartTime = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ResourceHealth.TenantEventResource&gt;&gt; GetTenantEventAsync(class Azure.ResourceManager.Resources.TenantResource tenantResource, string eventTrackingId, string filter, string queryStartTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetTenantEventAsync(Azure.ResourceManager.Resources.TenantResource,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTenantEventAsync (tenantResource As TenantResource, eventTrackingId As String, Optional filter As String = Nothing, Optional queryStartTime As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TenantEventResource))" />
      <MemberSignature Language="F#" Value="static member GetTenantEventAsync : Azure.ResourceManager.Resources.TenantResource * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.TenantEventResource&gt;&gt;" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetTenantEventAsync (tenantResource, eventTrackingId, filter, queryStartTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.TenantEventResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
        <Parameter Name="eventTrackingId" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="queryStartTime" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <param name="eventTrackingId"> Event Id which uniquely identifies ServiceHealth event. </param>
        <param name="filter"> The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN. </param>
        <param name="queryStartTime"> Specifies from when to return events, based on the lastUpdateTime property. For example, queryStartTime = 7/24/2020 OR queryStartTime=7%2F24%2F2020. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Service health event in the tenant by event tracking id
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.ResourceHealth/events/{eventTrackingId}</description></item><item><term>Operation Id</term><description>Event_GetByTenantIdAndTrackingId</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="eventTrackingId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="eventTrackingId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTenantEventResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.TenantEventResource GetTenantEventResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.TenantEventResource GetTenantEventResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetTenantEventResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTenantEventResource (client As ArmClient, id As ResourceIdentifier) As TenantEventResource" />
      <MemberSignature Language="F#" Value="static member GetTenantEventResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ResourceHealth.TenantEventResource" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetTenantEventResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.TenantEventResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ResourceHealth.TenantEventResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ResourceHealth.TenantEventResource.CreateResourceIdentifier(System.String)" /> to create a <see cref="T:Azure.ResourceManager.ResourceHealth.TenantEventResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ResourceHealth.TenantEventResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTenantEvents">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.TenantEventCollection GetTenantEvents (this Azure.ResourceManager.Resources.TenantResource tenantResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.TenantEventCollection GetTenantEvents(class Azure.ResourceManager.Resources.TenantResource tenantResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetTenantEvents(Azure.ResourceManager.Resources.TenantResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTenantEvents (tenantResource As TenantResource) As TenantEventCollection" />
      <MemberSignature Language="F#" Value="static member GetTenantEvents : Azure.ResourceManager.Resources.TenantResource -&gt; Azure.ResourceManager.ResourceHealth.TenantEventCollection" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetTenantEvents tenantResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.TenantEventCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tenantResource" Type="Azure.ResourceManager.Resources.TenantResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="tenantResource"> The <see cref="T:Azure.ResourceManager.Resources.TenantResource" /> instance the method will execute against. </param>
        <summary> Gets a collection of TenantEventResources in the TenantResource. </summary>
        <returns> An object representing collection of TenantEventResources and their operations over a TenantEventResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTenantResourceHealthEventImpactedResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventImpactedResource GetTenantResourceHealthEventImpactedResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventImpactedResource GetTenantResourceHealthEventImpactedResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetTenantResourceHealthEventImpactedResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTenantResourceHealthEventImpactedResource (client As ArmClient, id As ResourceIdentifier) As TenantResourceHealthEventImpactedResource" />
      <MemberSignature Language="F#" Value="static member GetTenantResourceHealthEventImpactedResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventImpactedResource" Usage="Azure.ResourceManager.ResourceHealth.ResourceHealthExtensions.GetTenantResourceHealthEventImpactedResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventImpactedResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing a <see cref="T:Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventImpactedResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventImpactedResource.CreateResourceIdentifier(System.String,System.String)" /> to create a <see cref="T:Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventImpactedResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ResourceHealth.TenantResourceHealthEventImpactedResource" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
