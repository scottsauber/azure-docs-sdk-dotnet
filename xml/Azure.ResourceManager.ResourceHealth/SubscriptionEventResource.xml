<Type Name="SubscriptionEventResource" FullName="Azure.ResourceManager.ResourceHealth.SubscriptionEventResource">
  <TypeSignature Language="C#" Value="public class SubscriptionEventResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SubscriptionEventResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ResourceHealth.SubscriptionEventResource" />
  <TypeSignature Language="VB.NET" Value="Public Class SubscriptionEventResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type SubscriptionEventResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A Class representing a SubscriptionEvent along with the instance operations that can be performed on it.
            If you have a <see cref="T:Azure.Core.ResourceIdentifier" /> you can construct a <see cref="T:Azure.ResourceManager.ResourceHealth.SubscriptionEventResource" />
            from an instance of <see cref="T:Azure.ResourceManager.ArmClient" /> using the GetSubscriptionEventResource method.
            Otherwise you can get one from its parent resource <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> using the GetSubscriptionEvent method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SubscriptionEventResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.SubscriptionEventResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.ResourceHealth.SubscriptionEventResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string eventTrackingId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string eventTrackingId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.SubscriptionEventResource.CreateResourceIdentifier(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, eventTrackingId As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.ResourceHealth.SubscriptionEventResource.CreateResourceIdentifier (subscriptionId, eventTrackingId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="eventTrackingId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">To be added.</param>
        <param name="eventTrackingId">To be added.</param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.ResourceHealth.SubscriptionEventResource" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ResourceHealth.EventData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.ResourceHealth.EventData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ResourceHealth.SubscriptionEventResource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As EventData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.ResourceHealth.EventData" Usage="Azure.ResourceManager.ResourceHealth.SubscriptionEventResource.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.EventData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="FetchDetailsBySubscriptionIdAndTrackingId">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ResourceHealth.SubscriptionEventResource&gt; FetchDetailsBySubscriptionIdAndTrackingId (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ResourceHealth.SubscriptionEventResource&gt; FetchDetailsBySubscriptionIdAndTrackingId(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.SubscriptionEventResource.FetchDetailsBySubscriptionIdAndTrackingId(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FetchDetailsBySubscriptionIdAndTrackingId (Optional cancellationToken As CancellationToken = Nothing) As Response(Of SubscriptionEventResource)" />
      <MemberSignature Language="F#" Value="abstract member FetchDetailsBySubscriptionIdAndTrackingId : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ResourceHealth.SubscriptionEventResource&gt;&#xA;override this.FetchDetailsBySubscriptionIdAndTrackingId : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ResourceHealth.SubscriptionEventResource&gt;" Usage="subscriptionEventResource.FetchDetailsBySubscriptionIdAndTrackingId cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ResourceHealth.SubscriptionEventResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Service health event details in the subscription by event tracking id. This can be used to fetch sensitive properties for Security Advisory events
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ResourceHealth/events/{eventTrackingId}/fetchEventDetails</description></item><item><term>Operation Id</term><description>Event_fetchDetailsBySubscriptionIdAndTrackingId</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FetchDetailsBySubscriptionIdAndTrackingIdAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.SubscriptionEventResource&gt;&gt; FetchDetailsBySubscriptionIdAndTrackingIdAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ResourceHealth.SubscriptionEventResource&gt;&gt; FetchDetailsBySubscriptionIdAndTrackingIdAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.SubscriptionEventResource.FetchDetailsBySubscriptionIdAndTrackingIdAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FetchDetailsBySubscriptionIdAndTrackingIdAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SubscriptionEventResource))" />
      <MemberSignature Language="F#" Value="abstract member FetchDetailsBySubscriptionIdAndTrackingIdAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.SubscriptionEventResource&gt;&gt;&#xA;override this.FetchDetailsBySubscriptionIdAndTrackingIdAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.SubscriptionEventResource&gt;&gt;" Usage="subscriptionEventResource.FetchDetailsBySubscriptionIdAndTrackingIdAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.SubscriptionEventResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Service health event details in the subscription by event tracking id. This can be used to fetch sensitive properties for Security Advisory events
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ResourceHealth/events/{eventTrackingId}/fetchEventDetails</description></item><item><term>Operation Id</term><description>Event_fetchDetailsBySubscriptionIdAndTrackingId</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ResourceHealth.SubscriptionEventResource&gt; Get (string filter = default, string queryStartTime = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ResourceHealth.SubscriptionEventResource&gt; Get(string filter, string queryStartTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.SubscriptionEventResource.Get(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional filter As String = Nothing, Optional queryStartTime As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SubscriptionEventResource)" />
      <MemberSignature Language="F#" Value="abstract member Get : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ResourceHealth.SubscriptionEventResource&gt;&#xA;override this.Get : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ResourceHealth.SubscriptionEventResource&gt;" Usage="subscriptionEventResource.Get (filter, queryStartTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ResourceHealth.SubscriptionEventResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="queryStartTime" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN. </param>
        <param name="queryStartTime"> Specifies from when to return events, based on the lastUpdateTime property. For example, queryStartTime = 7/24/2020 OR queryStartTime=7%2F24%2F2020. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Service health event in the subscription by event tracking id
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ResourceHealth/events/{eventTrackingId}</description></item><item><term>Operation Id</term><description>Event_GetBySubscriptionIdAndTrackingId</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.SubscriptionEventResource&gt;&gt; GetAsync (string filter = default, string queryStartTime = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ResourceHealth.SubscriptionEventResource&gt;&gt; GetAsync(string filter, string queryStartTime, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.SubscriptionEventResource.GetAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional filter As String = Nothing, Optional queryStartTime As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SubscriptionEventResource))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.SubscriptionEventResource&gt;&gt;&#xA;override this.GetAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.SubscriptionEventResource&gt;&gt;" Usage="subscriptionEventResource.GetAsync (filter, queryStartTime, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.SubscriptionEventResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="queryStartTime" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN. </param>
        <param name="queryStartTime"> Specifies from when to return events, based on the lastUpdateTime property. For example, queryStartTime = 7/24/2020 OR queryStartTime=7%2F24%2F2020. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Service health event in the subscription by event tracking id
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ResourceHealth/events/{eventTrackingId}</description></item><item><term>Operation Id</term><description>Event_GetBySubscriptionIdAndTrackingId</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityAdvisoryImpactedResourcesBySubscriptionIdAndEventId">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.ResourceHealth.EventImpactedResourceData&gt; GetSecurityAdvisoryImpactedResourcesBySubscriptionIdAndEventId (string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.ResourceHealth.EventImpactedResourceData&gt; GetSecurityAdvisoryImpactedResourcesBySubscriptionIdAndEventId(string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.SubscriptionEventResource.GetSecurityAdvisoryImpactedResourcesBySubscriptionIdAndEventId(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityAdvisoryImpactedResourcesBySubscriptionIdAndEventId (Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of EventImpactedResourceData)" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityAdvisoryImpactedResourcesBySubscriptionIdAndEventId : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ResourceHealth.EventImpactedResourceData&gt;&#xA;override this.GetSecurityAdvisoryImpactedResourcesBySubscriptionIdAndEventId : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ResourceHealth.EventImpactedResourceData&gt;" Usage="subscriptionEventResource.GetSecurityAdvisoryImpactedResourcesBySubscriptionIdAndEventId (filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ResourceHealth.EventImpactedResourceData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists impacted resources in the subscription by an event (Security Advisory).
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ResourceHealth/events/{eventTrackingId}/listSecurityAdvisoryImpactedResources</description></item><item><term>Operation Id</term><description>SecurityAdvisoryImpactedResources_ListBySubscriptionIdAndEventId</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ResourceHealth.EventImpactedResourceData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityAdvisoryImpactedResourcesBySubscriptionIdAndEventIdAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.ResourceHealth.EventImpactedResourceData&gt; GetSecurityAdvisoryImpactedResourcesBySubscriptionIdAndEventIdAsync (string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ResourceHealth.EventImpactedResourceData&gt; GetSecurityAdvisoryImpactedResourcesBySubscriptionIdAndEventIdAsync(string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.SubscriptionEventResource.GetSecurityAdvisoryImpactedResourcesBySubscriptionIdAndEventIdAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityAdvisoryImpactedResourcesBySubscriptionIdAndEventIdAsync (Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of EventImpactedResourceData)" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityAdvisoryImpactedResourcesBySubscriptionIdAndEventIdAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ResourceHealth.EventImpactedResourceData&gt;&#xA;override this.GetSecurityAdvisoryImpactedResourcesBySubscriptionIdAndEventIdAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ResourceHealth.EventImpactedResourceData&gt;" Usage="subscriptionEventResource.GetSecurityAdvisoryImpactedResourcesBySubscriptionIdAndEventIdAsync (filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ResourceHealth.EventImpactedResourceData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="filter"> The filter to apply on the operation. For more information please see https://docs.microsoft.com/en-us/rest/api/apimanagement/apis?redirectedfrom=MSDN. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists impacted resources in the subscription by an event (Security Advisory).
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ResourceHealth/events/{eventTrackingId}/listSecurityAdvisoryImpactedResources</description></item><item><term>Operation Id</term><description>SecurityAdvisoryImpactedResources_ListBySubscriptionIdAndEventId</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ResourceHealth.EventImpactedResourceData" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionResourceHealthEventImpactedResource">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.ResourceHealth.SubscriptionResourceHealthEventImpactedResource&gt; GetSubscriptionResourceHealthEventImpactedResource (string impactedResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.ResourceHealth.SubscriptionResourceHealthEventImpactedResource&gt; GetSubscriptionResourceHealthEventImpactedResource(string impactedResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.SubscriptionEventResource.GetSubscriptionResourceHealthEventImpactedResource(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubscriptionResourceHealthEventImpactedResource (impactedResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SubscriptionResourceHealthEventImpactedResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionResourceHealthEventImpactedResource : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ResourceHealth.SubscriptionResourceHealthEventImpactedResource&gt;&#xA;override this.GetSubscriptionResourceHealthEventImpactedResource : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ResourceHealth.SubscriptionResourceHealthEventImpactedResource&gt;" Usage="subscriptionEventResource.GetSubscriptionResourceHealthEventImpactedResource (impactedResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ResourceHealth.SubscriptionResourceHealthEventImpactedResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="impactedResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="impactedResourceName"> Name of the Impacted Resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specific impacted resource in the subscription by an event.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ResourceHealth/events/{eventTrackingId}/impactedResources/{impactedResourceName}</description></item><item><term>Operation Id</term><description>ImpactedResources_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="impactedResourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="impactedResourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionResourceHealthEventImpactedResourceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.SubscriptionResourceHealthEventImpactedResource&gt;&gt; GetSubscriptionResourceHealthEventImpactedResourceAsync (string impactedResourceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ResourceHealth.SubscriptionResourceHealthEventImpactedResource&gt;&gt; GetSubscriptionResourceHealthEventImpactedResourceAsync(string impactedResourceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.SubscriptionEventResource.GetSubscriptionResourceHealthEventImpactedResourceAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubscriptionResourceHealthEventImpactedResourceAsync (impactedResourceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SubscriptionResourceHealthEventImpactedResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionResourceHealthEventImpactedResourceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.SubscriptionResourceHealthEventImpactedResource&gt;&gt;&#xA;override this.GetSubscriptionResourceHealthEventImpactedResourceAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.SubscriptionResourceHealthEventImpactedResource&gt;&gt;" Usage="subscriptionEventResource.GetSubscriptionResourceHealthEventImpactedResourceAsync (impactedResourceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ResourceHealth.SubscriptionResourceHealthEventImpactedResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="impactedResourceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="impactedResourceName"> Name of the Impacted Resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specific impacted resource in the subscription by an event.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ResourceHealth/events/{eventTrackingId}/impactedResources/{impactedResourceName}</description></item><item><term>Operation Id</term><description>ImpactedResources_Get</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="impactedResourceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="impactedResourceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionResourceHealthEventImpactedResources">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ResourceHealth.SubscriptionResourceHealthEventImpactedResourceCollection GetSubscriptionResourceHealthEventImpactedResources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ResourceHealth.SubscriptionResourceHealthEventImpactedResourceCollection GetSubscriptionResourceHealthEventImpactedResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ResourceHealth.SubscriptionEventResource.GetSubscriptionResourceHealthEventImpactedResources" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubscriptionResourceHealthEventImpactedResources () As SubscriptionResourceHealthEventImpactedResourceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionResourceHealthEventImpactedResources : unit -&gt; Azure.ResourceManager.ResourceHealth.SubscriptionResourceHealthEventImpactedResourceCollection&#xA;override this.GetSubscriptionResourceHealthEventImpactedResources : unit -&gt; Azure.ResourceManager.ResourceHealth.SubscriptionResourceHealthEventImpactedResourceCollection" Usage="subscriptionEventResource.GetSubscriptionResourceHealthEventImpactedResources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ResourceHealth.SubscriptionResourceHealthEventImpactedResourceCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of SubscriptionResourceHealthEventImpactedResources in the SubscriptionEvent. </summary>
        <returns> An object representing collection of SubscriptionResourceHealthEventImpactedResources and their operations over a SubscriptionResourceHealthEventImpactedResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.ResourceHealth.SubscriptionEventResource.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.ResourceHealth.SubscriptionEventResource.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.ResourceHealth.SubscriptionEventResource.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.ResourceHealth.SubscriptionEventResource.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ResourceHealth</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
