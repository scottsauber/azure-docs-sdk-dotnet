<Type Name="DynamicJson+ObjectEnumerator" FullName="Azure.Core.Dynamic.DynamicJson+ObjectEnumerator">
  <TypeSignature Language="C#" Value="public struct DynamicJson.ObjectEnumerator : System.Collections.Generic.IEnumerable&lt;Azure.Core.Dynamic.DynamicJsonProperty&gt;, System.Collections.Generic.IEnumerator&lt;Azure.Core.Dynamic.DynamicJsonProperty&gt;" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit DynamicJson/ObjectEnumerator extends System.ValueType implements class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.Core.Dynamic.DynamicJsonProperty&gt;, class System.Collections.Generic.IEnumerator`1&lt;valuetype Azure.Core.Dynamic.DynamicJsonProperty&gt;, class System.Collections.IEnumerable, class System.Collections.IEnumerator, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Azure.Core.Dynamic.DynamicJson.ObjectEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure DynamicJson.ObjectEnumerator&#xA;Implements IEnumerable(Of DynamicJsonProperty), IEnumerator(Of DynamicJsonProperty)" />
  <TypeSignature Language="F#" Value="type DynamicJson.ObjectEnumerator = struct&#xA;    interface seq&lt;DynamicJsonProperty&gt;&#xA;    interface IEnumerable&#xA;    interface IEnumerator&lt;DynamicJsonProperty&gt;&#xA;    interface IEnumerator&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Azure.Core.Experimental</AssemblyName>
    <AssemblyVersion>0.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;Azure.Core.Dynamic.DynamicJsonProperty&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerator&lt;Azure.Core.Dynamic.DynamicJsonProperty&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("{Current,nq}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("{Current,nq}")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            An enumerable and enumerator for the properties of a mutable JSON object.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public Azure.Core.Dynamic.DynamicJsonProperty Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Azure.Core.Dynamic.DynamicJsonProperty Current" />
      <MemberSignature Language="DocId" Value="P:Azure.Core.Dynamic.DynamicJson.ObjectEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As DynamicJsonProperty" />
      <MemberSignature Language="F#" Value="member this.Current : Azure.Core.Dynamic.DynamicJsonProperty" Usage="Azure.Core.Dynamic.DynamicJson.ObjectEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IEnumerator`1.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Core.Experimental</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Dynamic.DynamicJsonProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the element in the collection at the current position of the enumerator.</summary>
        <value>The element in the collection at the current position of the enumerator.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Core.Dynamic.DynamicJson.ObjectEnumerator.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="objectEnumerator.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Core.Experimental</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public Azure.Core.Dynamic.DynamicJson.ObjectEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Azure.Core.Dynamic.DynamicJson/ObjectEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Core.Dynamic.DynamicJson.ObjectEnumerator.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As DynamicJson.ObjectEnumerator" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; Azure.Core.Dynamic.DynamicJson.ObjectEnumerator" Usage="objectEnumerator.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Core.Experimental</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Dynamic.DynamicJson+ObjectEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
              Returns an enumerator that iterates the properties of an object.
            </summary>
        <returns>
              An <see cref="T:Azure.Core.Dynamic.DynamicJson.ObjectEnumerator" /> value that can be used to iterate
              through the object.
            </returns>
        <remarks>
              The enumerator will enumerate the properties in the order they are
              declared, and when an object has multiple definitions of a single
              property they will all individually be returned (each in the order
              they appear in the content).
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Core.Dynamic.DynamicJson.ObjectEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="objectEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Core.Experimental</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Advances the enumerator to the next element of the collection.</summary>
        <returns>
          <see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Core.Dynamic.DynamicJson.ObjectEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="objectEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Core.Experimental</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;Azure.Core.Dynamic.DynamicJsonProperty&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;Azure.Core.Dynamic.DynamicJsonProperty&gt; IEnumerable&lt;DynamicJsonProperty&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype Azure.Core.Dynamic.DynamicJsonProperty&gt; System.Collections.Generic.IEnumerable&lt;Azure.Core.Dynamic.DynamicJsonProperty&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Core.Dynamic.DynamicJson.ObjectEnumerator.System#Collections#Generic#IEnumerable&lt;Azure#Core#Dynamic#DynamicJsonProperty&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of DynamicJsonProperty) Implements IEnumerable(Of DynamicJsonProperty).GetEnumerator" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IEnumerable&lt;Azure.Core.Dynamic.DynamicJsonProperty&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;Azure.Core.Dynamic.DynamicJsonProperty&gt;&#xA;override this.System.Collections.Generic.IEnumerable&lt;Azure.Core.Dynamic.DynamicJsonProperty&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;Azure.Core.Dynamic.DynamicJsonProperty&gt;" Usage="objectEnumerator.System.Collections.Generic.IEnumerable&lt;Azure.Core.Dynamic.DynamicJsonProperty&gt;.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Core.Experimental</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;Azure.Core.Dynamic.DynamicJsonProperty&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator that iterates through the collection.</summary>
        <returns>An enumerator that can be used to iterate through the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Core.Dynamic.DynamicJson.ObjectEnumerator.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="objectEnumerator.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Core.Experimental</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator that iterates through a collection.</summary>
        <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:Azure.Core.Dynamic.DynamicJson.ObjectEnumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IEnumerator.Current : obj" Usage="System.Collections.IEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Azure.Core.Experimental</AssemblyName>
        <AssemblyVersion>0.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the element in the collection at the current position of the enumerator.</summary>
        <value>The element in the collection at the current position of the enumerator.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
