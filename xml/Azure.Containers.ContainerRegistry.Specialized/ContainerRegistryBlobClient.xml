<Type Name="ContainerRegistryBlobClient" FullName="Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient">
  <TypeSignature Language="C#" Value="public class ContainerRegistryBlobClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContainerRegistryBlobClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient" />
  <TypeSignature Language="VB.NET" Value="Public Class ContainerRegistryBlobClient" />
  <TypeSignature Language="F#" Value="type ContainerRegistryBlobClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The Azure Container Registry blob client, responsible for uploading and downloading
            blobs and manifests, the building blocks of artifacts. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ContainerRegistryBlobClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of ContainerRegistryBlobClient for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContainerRegistryBlobClient (Uri endpoint, string repository);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, string repository) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient.#ctor(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, repository As String)" />
      <MemberSignature Language="F#" Value="new Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient : Uri * string -&gt; Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient" Usage="new Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient (endpoint, repository)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="repository" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="endpoint">The URI endpoint of the container registry.  This is likely to be similar
            to "https://{registry-name}.azurecr.io".</param>
        <param name="repository">The name of the repository that logically groups the artifact parts.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient" /> for managing container images and artifacts,
            using anonymous access to the registry.  Only operations that support anonymous access are enabled.  Other service
            methods will throw <see cref="T:Azure.RequestFailedException" /> if called from this client.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"> Thrown when the <paramref name="endpoint" /> or <paramref name="repository" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContainerRegistryBlobClient (Uri endpoint, string repository, Azure.Containers.ContainerRegistry.ContainerRegistryClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, string repository, class Azure.Containers.ContainerRegistry.ContainerRegistryClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient.#ctor(System.Uri,System.String,Azure.Containers.ContainerRegistry.ContainerRegistryClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, repository As String, options As ContainerRegistryClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient : Uri * string * Azure.Containers.ContainerRegistry.ContainerRegistryClientOptions -&gt; Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient" Usage="new Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient (endpoint, repository, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="repository" Type="System.String" />
        <Parameter Name="options" Type="Azure.Containers.ContainerRegistry.ContainerRegistryClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">The URI endpoint of the container registry.  This is likely to be similar
            to "https://{registry-name}.azurecr.io".</param>
        <param name="repository">The name of the repository that logically groups the artifact parts.</param>
        <param name="options">Client configuration options for connecting to Azure Container Registry.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient" /> for managing container images and artifacts,
            using anonymous access to the registry.  Only operations that support anonymous access are enabled.  Other service
            methods will throw <see cref="T:Azure.RequestFailedException" /> if called from this client.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"> Thrown when the <paramref name="endpoint" /> or <paramref name="repository" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContainerRegistryBlobClient (Uri endpoint, string repository, Azure.Core.TokenCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, string repository, class Azure.Core.TokenCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient.#ctor(System.Uri,System.String,Azure.Core.TokenCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, repository As String, credential As TokenCredential)" />
      <MemberSignature Language="F#" Value="new Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient : Uri * string * Azure.Core.TokenCredential -&gt; Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient" Usage="new Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient (endpoint, repository, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="repository" Type="System.String" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
      </Parameters>
      <Docs>
        <param name="endpoint">The URI endpoint of the container registry.  This is likely to be similar
            to "https://{registry-name}.azurecr.io".</param>
        <param name="credential">The API key credential used to authenticate requests
            against the container registry.  </param>
        <param name="repository">The name of the repository that logically groups the artifact parts.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient" /> for managing container images and artifacts.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"> Thrown when the <paramref name="endpoint" />, <paramref name="credential" />, or <paramref name="repository" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContainerRegistryBlobClient (Uri endpoint, string repository, Azure.Core.TokenCredential credential, Azure.Containers.ContainerRegistry.ContainerRegistryClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, string repository, class Azure.Core.TokenCredential credential, class Azure.Containers.ContainerRegistry.ContainerRegistryClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient.#ctor(System.Uri,System.String,Azure.Core.TokenCredential,Azure.Containers.ContainerRegistry.ContainerRegistryClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, repository As String, credential As TokenCredential, options As ContainerRegistryClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient : Uri * string * Azure.Core.TokenCredential * Azure.Containers.ContainerRegistry.ContainerRegistryClientOptions -&gt; Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient" Usage="new Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient (endpoint, repository, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="repository" Type="System.String" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Containers.ContainerRegistry.ContainerRegistryClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">The URI endpoint of the container registry.  This is likely to be similar
            to "https://{registry-name}.azurecr.io".</param>
        <param name="credential">The API key credential used to authenticate requests
            against the container registry.  </param>
        <param name="repository">The name of the repository that logically groups the artifact parts.</param>
        <param name="options">Client configuration options for connecting to Azure Container Registry.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient" /> for managing container images and artifacts.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"> Thrown when the <paramref name="endpoint" />, <paramref name="credential" />, or <paramref name="repository" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteBlob">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteBlob (string digest, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteBlob(string digest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient.DeleteBlob(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteBlob (digest As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteBlob : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteBlob : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="containerRegistryBlobClient.DeleteBlob (digest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digest" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digest">The digest of the blob to delete.</param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Delete a blob.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteBlobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteBlobAsync (string digest, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteBlobAsync(string digest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient.DeleteBlobAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteBlobAsync (digest As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteBlobAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteBlobAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="containerRegistryBlobClient.DeleteBlobAsync (digest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digest" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digest">The digest of the blob to delete.</param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Delete a blob.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteManifest">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteManifest (string digest, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteManifest(string digest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient.DeleteManifest(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteManifest (digest As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteManifest : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteManifest : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="containerRegistryBlobClient.DeleteManifest (digest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digest" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digest">The digest of the manifest to delete.</param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Delete a manifest.  Doing so effectively deletes the artifact from the registry.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteManifestAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteManifestAsync (string digest, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteManifestAsync(string digest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient.DeleteManifestAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteManifestAsync (digest As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteManifestAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteManifestAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="containerRegistryBlobClient.DeleteManifestAsync (digest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digest" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digest">The digest of the manifest to delete.</param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Delete a manifest.  Doing so effectively deletes the artifact from the registry.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadBlob">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.DownloadBlobResult&gt; DownloadBlob (string digest, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.Specialized.DownloadBlobResult&gt; DownloadBlob(string digest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient.DownloadBlob(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadBlob (digest As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DownloadBlobResult)" />
      <MemberSignature Language="F#" Value="abstract member DownloadBlob : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.DownloadBlobResult&gt;&#xA;override this.DownloadBlob : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.DownloadBlobResult&gt;" Usage="containerRegistryBlobClient.DownloadBlob (digest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.DownloadBlobResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digest" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digest">The digest of the blob to download.</param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Download an artifact blob.
            This API is a prefered way to fetch blobs that can fit into memory.
            The content is provided as <see cref="T:System.BinaryData" /> that provides a lightweight abstraction for a payload of bytes.
            It provides convenient helper methods to get out commonly used primitives, such as streams, strings, or bytes.
            To download a blob that does not fit in memory, please use the <see cref="M:Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient.DownloadBlobTo(System.String,System.IO.Stream,System.Threading.CancellationToken)" /> method instead.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadBlobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.DownloadBlobResult&gt;&gt; DownloadBlobAsync (string digest, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.Specialized.DownloadBlobResult&gt;&gt; DownloadBlobAsync(string digest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient.DownloadBlobAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadBlobAsync (digest As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DownloadBlobResult))" />
      <MemberSignature Language="F#" Value="abstract member DownloadBlobAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.DownloadBlobResult&gt;&gt;&#xA;override this.DownloadBlobAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.DownloadBlobResult&gt;&gt;" Usage="containerRegistryBlobClient.DownloadBlobAsync (digest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.DownloadBlobResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digest" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digest">The digest of the blob to download.</param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Download an artifact blob.
            This API is a prefered way to fetch blobs that can fit into memory.
            The content is provided as <see cref="T:System.BinaryData" /> that provides a lightweight abstraction for a payload of bytes.
            It provides convenient helper methods to get out commonly used primitives, such as streams, strings, or bytes.
            To download a blob that does not fit in memory, please use the <see cref="M:Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient.DownloadBlobToAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)" /> method instead.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadBlobTo">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DownloadBlobTo (string digest, System.IO.Stream destination, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DownloadBlobTo(string digest, class System.IO.Stream destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient.DownloadBlobTo(System.String,System.IO.Stream,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadBlobTo (digest As String, destination As Stream, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DownloadBlobTo : string * System.IO.Stream * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DownloadBlobTo : string * System.IO.Stream * System.Threading.CancellationToken -&gt; Azure.Response" Usage="containerRegistryBlobClient.DownloadBlobTo (digest, destination, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digest" Type="System.String" />
        <Parameter Name="destination" Type="System.IO.Stream" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digest">The digest of the blob to download.</param>
        <param name="destination">Destination for the downloaded blob.</param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Download a blob to a passed-in destination stream.
            </summary>
        <returns>The raw response corresponding to the final GET blob chunk request.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadBlobToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DownloadBlobToAsync (string digest, System.IO.Stream destination, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DownloadBlobToAsync(string digest, class System.IO.Stream destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient.DownloadBlobToAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadBlobToAsync (digest As String, destination As Stream, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DownloadBlobToAsync : string * System.IO.Stream * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DownloadBlobToAsync : string * System.IO.Stream * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="containerRegistryBlobClient.DownloadBlobToAsync (digest, destination, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="digest" Type="System.String" />
        <Parameter Name="destination" Type="System.IO.Stream" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="digest">The digest of the blob to download.</param>
        <param name="destination">Destination for the downloaded blob.</param>
        <param name="cancellationToken"> The cancellation token to use.</param>
        <summary>
            Download a blob to a passed-in destination stream.  This approach will download the blob
            to the destination stream in sequential chunks of bytes.
            </summary>
        <returns>The raw response corresponding to the final GET blob chunk request.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadManifest">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.DownloadManifestResult&gt; DownloadManifest (string tagOrDigest, Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType? mediaType = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.Specialized.DownloadManifestResult&gt; DownloadManifest(string tagOrDigest, valuetype System.Nullable`1&lt;valuetype Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType&gt; mediaType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient.DownloadManifest(System.String,System.Nullable{Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadManifest (tagOrDigest As String, Optional mediaType As Nullable(Of ManifestMediaType) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DownloadManifestResult)" />
      <MemberSignature Language="F#" Value="abstract member DownloadManifest : string * Nullable&lt;Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.DownloadManifestResult&gt;&#xA;override this.DownloadManifest : string * Nullable&lt;Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.DownloadManifestResult&gt;" Usage="containerRegistryBlobClient.DownloadManifest (tagOrDigest, mediaType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.DownloadManifestResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagOrDigest" Type="System.String" />
        <Parameter Name="mediaType" Type="System.Nullable&lt;Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tagOrDigest">The tag or digest of the manifest to download.</param>
        <param name="mediaType">The media type of the manifest to download.  If not specified, all media types will be requested.</param>
        <param name="cancellationToken">The cancellation token to use.</param>
        <summary>
            Downloads the manifest for an OCI artifact.
            </summary>
        <returns>The download manifest result.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadManifestAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.DownloadManifestResult&gt;&gt; DownloadManifestAsync (string tagOrDigest, Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType? mediaType = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.Specialized.DownloadManifestResult&gt;&gt; DownloadManifestAsync(string tagOrDigest, valuetype System.Nullable`1&lt;valuetype Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType&gt; mediaType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient.DownloadManifestAsync(System.String,System.Nullable{Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DownloadManifestAsync (tagOrDigest As String, Optional mediaType As Nullable(Of ManifestMediaType) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DownloadManifestResult))" />
      <MemberSignature Language="F#" Value="abstract member DownloadManifestAsync : string * Nullable&lt;Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.DownloadManifestResult&gt;&gt;&#xA;override this.DownloadManifestAsync : string * Nullable&lt;Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.DownloadManifestResult&gt;&gt;" Usage="containerRegistryBlobClient.DownloadManifestAsync (tagOrDigest, mediaType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.DownloadManifestResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagOrDigest" Type="System.String" />
        <Parameter Name="mediaType" Type="System.Nullable&lt;Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tagOrDigest">The tag or digest of the manifest to download.</param>
        <param name="mediaType">The media type of the manifest to download.  If not specified, all media types will be requested.</param>
        <param name="cancellationToken">The cancellation token to use.</param>
        <summary>
            Downloads the manifest for an OCI artifact.
            </summary>
        <returns>The download manifest result.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Endpoint">
      <MemberSignature Language="C#" Value="public virtual Uri Endpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Endpoint" />
      <MemberSignature Language="DocId" Value="P:Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient.Endpoint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Endpoint As Uri" />
      <MemberSignature Language="F#" Value="member this.Endpoint : Uri" Usage="Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient.Endpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the registry service endpoint for this client.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pipeline">
      <MemberSignature Language="C#" Value="public virtual Azure.Core.Pipeline.HttpPipeline Pipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Pipeline.HttpPipeline Pipeline" />
      <MemberSignature Language="DocId" Value="P:Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient.Pipeline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Pipeline As HttpPipeline" />
      <MemberSignature Language="F#" Value="member this.Pipeline : Azure.Core.Pipeline.HttpPipeline" Usage="Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient.Pipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Pipeline.HttpPipeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The HttpPipeline.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RepositoryName">
      <MemberSignature Language="C#" Value="public virtual string RepositoryName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RepositoryName" />
      <MemberSignature Language="DocId" Value="P:Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient.RepositoryName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RepositoryName As String" />
      <MemberSignature Language="F#" Value="member this.RepositoryName : string" Usage="Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient.RepositoryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the name of the repository that logically groups the artifact parts.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadBlob">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.UploadBlobResult&gt; UploadBlob (System.IO.Stream stream, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.Specialized.UploadBlobResult&gt; UploadBlob(class System.IO.Stream stream, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient.UploadBlob(System.IO.Stream,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadBlob (stream As Stream, Optional cancellationToken As CancellationToken = Nothing) As Response(Of UploadBlobResult)" />
      <MemberSignature Language="F#" Value="abstract member UploadBlob : System.IO.Stream * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.UploadBlobResult&gt;&#xA;override this.UploadBlob : System.IO.Stream * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.UploadBlobResult&gt;" Usage="containerRegistryBlobClient.UploadBlob (stream, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.UploadBlobResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="stream">The stream containing the blob data.</param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Upload an artifact blob.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadBlobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.UploadBlobResult&gt;&gt; UploadBlobAsync (System.IO.Stream stream, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.Specialized.UploadBlobResult&gt;&gt; UploadBlobAsync(class System.IO.Stream stream, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient.UploadBlobAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadBlobAsync (stream As Stream, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of UploadBlobResult))" />
      <MemberSignature Language="F#" Value="abstract member UploadBlobAsync : System.IO.Stream * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.UploadBlobResult&gt;&gt;&#xA;override this.UploadBlobAsync : System.IO.Stream * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.UploadBlobResult&gt;&gt;" Usage="containerRegistryBlobClient.UploadBlobAsync (stream, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.UploadBlobResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="stream">The stream containing the blob data.</param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Upload an artifact blob.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadManifest">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.UploadManifestResult&gt; UploadManifest (Azure.Containers.ContainerRegistry.Specialized.OciManifest manifest, string tag = default, Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType? mediaType = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.Specialized.UploadManifestResult&gt; UploadManifest(class Azure.Containers.ContainerRegistry.Specialized.OciManifest manifest, string tag, valuetype System.Nullable`1&lt;valuetype Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType&gt; mediaType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient.UploadManifest(Azure.Containers.ContainerRegistry.Specialized.OciManifest,System.String,System.Nullable{Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadManifest (manifest As OciManifest, Optional tag As String = Nothing, Optional mediaType As Nullable(Of ManifestMediaType) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of UploadManifestResult)" />
      <MemberSignature Language="F#" Value="abstract member UploadManifest : Azure.Containers.ContainerRegistry.Specialized.OciManifest * string * Nullable&lt;Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.UploadManifestResult&gt;&#xA;override this.UploadManifest : Azure.Containers.ContainerRegistry.Specialized.OciManifest * string * Nullable&lt;Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.UploadManifestResult&gt;" Usage="containerRegistryBlobClient.UploadManifest (manifest, tag, mediaType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.UploadManifestResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manifest" Type="Azure.Containers.ContainerRegistry.Specialized.OciManifest" />
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="mediaType" Type="System.Nullable&lt;Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="manifest">The manifest to upload.</param>
        <param name="tag">A optional tag to assign to the artifact this manifest represents.</param>
        <param name="mediaType">The media type of the manifest.  If not specified, this value will be set to
            a default value of "application/vnd.oci.image.manifest.v1+json".</param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Uploads an artifact manifest.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadManifest">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.UploadManifestResult&gt; UploadManifest (System.IO.Stream manifestStream, string tag = default, Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType? mediaType = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.Specialized.UploadManifestResult&gt; UploadManifest(class System.IO.Stream manifestStream, string tag, valuetype System.Nullable`1&lt;valuetype Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType&gt; mediaType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient.UploadManifest(System.IO.Stream,System.String,System.Nullable{Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadManifest (manifestStream As Stream, Optional tag As String = Nothing, Optional mediaType As Nullable(Of ManifestMediaType) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of UploadManifestResult)" />
      <MemberSignature Language="F#" Value="abstract member UploadManifest : System.IO.Stream * string * Nullable&lt;Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.UploadManifestResult&gt;&#xA;override this.UploadManifest : System.IO.Stream * string * Nullable&lt;Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.UploadManifestResult&gt;" Usage="containerRegistryBlobClient.UploadManifest (manifestStream, tag, mediaType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.UploadManifestResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manifestStream" Type="System.IO.Stream" />
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="mediaType" Type="System.Nullable&lt;Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="manifestStream">The <see cref="T:System.IO.Stream" /> manifest to upload.</param>
        <param name="tag">A optional tag to assign to the artifact this manifest represents.</param>
        <param name="mediaType">The media type of the manifest.  If not specified, this value will be set to
            a default value of "application/vnd.oci.image.manifest.v1+json".</param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Uploads an artifact manifest.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadManifestAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.UploadManifestResult&gt;&gt; UploadManifestAsync (Azure.Containers.ContainerRegistry.Specialized.OciManifest manifest, string tag = default, Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType? mediaType = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.Specialized.UploadManifestResult&gt;&gt; UploadManifestAsync(class Azure.Containers.ContainerRegistry.Specialized.OciManifest manifest, string tag, valuetype System.Nullable`1&lt;valuetype Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType&gt; mediaType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient.UploadManifestAsync(Azure.Containers.ContainerRegistry.Specialized.OciManifest,System.String,System.Nullable{Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadManifestAsync (manifest As OciManifest, Optional tag As String = Nothing, Optional mediaType As Nullable(Of ManifestMediaType) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of UploadManifestResult))" />
      <MemberSignature Language="F#" Value="abstract member UploadManifestAsync : Azure.Containers.ContainerRegistry.Specialized.OciManifest * string * Nullable&lt;Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.UploadManifestResult&gt;&gt;&#xA;override this.UploadManifestAsync : Azure.Containers.ContainerRegistry.Specialized.OciManifest * string * Nullable&lt;Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.UploadManifestResult&gt;&gt;" Usage="containerRegistryBlobClient.UploadManifestAsync (manifest, tag, mediaType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.UploadManifestResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manifest" Type="Azure.Containers.ContainerRegistry.Specialized.OciManifest" />
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="mediaType" Type="System.Nullable&lt;Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="manifest">The manifest to upload.</param>
        <param name="tag">A optional tag to assign to the artifact this manifest represents.</param>
        <param name="mediaType">The media type of the manifest.  If not specified, this value will be set to
            a default value of "application/vnd.oci.image.manifest.v1+json".</param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Uploads an artifact manifest.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadManifestAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.UploadManifestResult&gt;&gt; UploadManifestAsync (System.IO.Stream manifestStream, string tag = default, Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType? mediaType = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Containers.ContainerRegistry.Specialized.UploadManifestResult&gt;&gt; UploadManifestAsync(class System.IO.Stream manifestStream, string tag, valuetype System.Nullable`1&lt;valuetype Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType&gt; mediaType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Containers.ContainerRegistry.Specialized.ContainerRegistryBlobClient.UploadManifestAsync(System.IO.Stream,System.String,System.Nullable{Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UploadManifestAsync (manifestStream As Stream, Optional tag As String = Nothing, Optional mediaType As Nullable(Of ManifestMediaType) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of UploadManifestResult))" />
      <MemberSignature Language="F#" Value="abstract member UploadManifestAsync : System.IO.Stream * string * Nullable&lt;Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.UploadManifestResult&gt;&gt;&#xA;override this.UploadManifestAsync : System.IO.Stream * string * Nullable&lt;Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.UploadManifestResult&gt;&gt;" Usage="containerRegistryBlobClient.UploadManifestAsync (manifestStream, tag, mediaType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Containers.ContainerRegistry</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Containers.ContainerRegistry.Specialized.UploadManifestResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manifestStream" Type="System.IO.Stream" />
        <Parameter Name="tag" Type="System.String" />
        <Parameter Name="mediaType" Type="System.Nullable&lt;Azure.Containers.ContainerRegistry.Specialized.ManifestMediaType&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="manifestStream">The <see cref="T:System.IO.Stream" /> manifest to upload.</param>
        <param name="tag">A optional tag to assign to the artifact this manifest represents.</param>
        <param name="mediaType">The media type of the manifest.  If not specified, this value will be set to
            a default value of "application/vnd.oci.image.manifest.v1+json".</param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Uploads an artifact manifest.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
