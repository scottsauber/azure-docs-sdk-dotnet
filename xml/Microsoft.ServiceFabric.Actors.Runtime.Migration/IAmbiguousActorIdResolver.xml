<Type Name="IAmbiguousActorIdResolver" FullName="Microsoft.ServiceFabric.Actors.Runtime.Migration.IAmbiguousActorIdResolver">
  <TypeSignature Language="C#" Value="public interface IAmbiguousActorIdResolver" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAmbiguousActorIdResolver" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ServiceFabric.Actors.Runtime.Migration.IAmbiguousActorIdResolver" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAmbiguousActorIdResolver" />
  <TypeSignature Language="F#" Value="type IAmbiguousActorIdResolver = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Interface to resolve actorId from storage key incase there is any ambiguity.
            The implementation should have a default constructor.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TryResolveActorIdAndStateName">
      <MemberSignature Language="C#" Value="public bool TryResolveActorIdAndStateName (string key, out string actorId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryResolveActorIdAndStateName(string key, [out] string&amp; actorId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ServiceFabric.Actors.Runtime.Migration.IAmbiguousActorIdResolver.TryResolveActorIdAndStateName(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryResolveActorIdAndStateName (key As String, ByRef actorId As String) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member TryResolveActorIdAndStateName : string * string -&gt; bool" Usage="iAmbiguousActorIdResolver.TryResolveActorIdAndStateName (key, actorId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ServiceFabric.Actors</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="actorId" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">Underscore delimited actor id and state name(Ex, MyActorId_MyStateName)</param>
        <param name="actorId">Resolved Actor id.</param>
        <summary>
            Resolves actor id from storage key.
            </summary>
        <returns>True if resolved, false otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
