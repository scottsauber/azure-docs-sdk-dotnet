<Type Name="IAsyncCollectorExtensions" FullName="Microsoft.Azure.WebJobs.IAsyncCollectorExtensions">
  <TypeSignature Language="C#" Value="public static class IAsyncCollectorExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IAsyncCollectorExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Azure.WebJobs.IAsyncCollectorExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module IAsyncCollectorExtensions" />
  <TypeSignature Language="F#" Value="type IAsyncCollectorExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Azure.WebJobs.Extensions.EventHubs</AssemblyName>
    <AssemblyVersion>5.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task AddAsync (this Microsoft.Azure.WebJobs.IAsyncCollector&lt;Azure.Messaging.EventHubs.EventData&gt; instance, Azure.Messaging.EventHubs.EventData eventData, string partitionKey, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task AddAsync(class Microsoft.Azure.WebJobs.IAsyncCollector`1&lt;class Azure.Messaging.EventHubs.EventData&gt; instance, class Azure.Messaging.EventHubs.EventData eventData, string partitionKey, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Azure.WebJobs.IAsyncCollectorExtensions.AddAsync(Microsoft.Azure.WebJobs.IAsyncCollector{Azure.Messaging.EventHubs.EventData},Azure.Messaging.EventHubs.EventData,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddAsync (instance As IAsyncCollector(Of EventData), eventData As EventData, partitionKey As String, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="static member AddAsync : Microsoft.Azure.WebJobs.IAsyncCollector&lt;Azure.Messaging.EventHubs.EventData&gt; * Azure.Messaging.EventHubs.EventData * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="Microsoft.Azure.WebJobs.IAsyncCollectorExtensions.AddAsync (instance, eventData, partitionKey, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Azure.WebJobs.Extensions.EventHubs</AssemblyName>
        <AssemblyVersion>5.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="Microsoft.Azure.WebJobs.IAsyncCollector&lt;Azure.Messaging.EventHubs.EventData&gt;" RefType="this" />
        <Parameter Name="eventData" Type="Azure.Messaging.EventHubs.EventData" />
        <Parameter Name="partitionKey" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="instance">The instance of the <see cref="T:Microsoft.Azure.WebJobs.IAsyncCollector`1" /> that this method was invoked on.</param>
        <param name="eventData">The event to add</param>
        <param name="partitionKey">The partition key to use for partition assignment.  If <c>null</c>, round-robin partition assignment will be used.</param>
        <param name="cancellationToken">A token that can be used to cancel the operation.</param>
        <summary>
            Add an event to be published using the provided <paramref name="partitionKey" /> for partition assignment.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
